@page "/Trending"

@using CryptoTracker.DataAccess.CoinGeckoAccess

@using CryptoTracker.Web.Components
@inject ICoinMarketCapData coinMarketCapData
@inject ICoinGeckoData coinGeckoData

<h2>Trending Coins</h2>
@if (loading)
{
    <LoadingSpinner />
}
else
{
    <RadzenDataGrid Data="@TrendingCoins" TItem="CoinMarketCapIDMapModel" AllowPaging="true" AllowSorting="true" FilterMode="FilterMode.Simple" AllowFiltering="true">
        <Columns>
            <RadzenDataGridColumn TItem="CoinMarketCapIDMapModel" Property="Name" Title="Name" CssClass="text-center">
                <Template Context="coin">
                    <img class="coin-img" src="@("https://s2.coinmarketcap.com/static/img/coins/32x32/" + coin.Id + ".png")"> <a href="/Coin/@coin.Id">@coin.Name</a>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {
    List<CoinMarketCapIDMapModel> TrendingCoins { get; set; }
    bool loading = false;
    public Trending()
    {
        TrendingCoins = new();
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        TrendingCoins = await coinMarketCapData.GetTrending();
        loading = false;
    }
}
