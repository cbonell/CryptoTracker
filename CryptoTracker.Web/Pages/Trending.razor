@page "/Trending"

@using CryptoTracker.DataAccess.CoinMarketCap.Data
@using CryptoTracker.DataAccess.CoinMarketCap.Model
@using CryptoTracker.Web.Components

<h2>Top Ten Trending Coins</h2>
@if(loading)
{
    <LoadingSpinner/>
}
else
{
<RadzenDataGrid Data="@TrendingCoins" TItem="DataModel" AllowPaging="true" AllowSorting="true" FilterMode="FilterMode.Simple" AllowFiltering="true" >
        <Columns>
            <RadzenDataGridColumn TItem="DataModel" Property="Name" Title="Name" CssClass="text-center">
                <Template Context="coin">
                <img class="coin-img" src="@("https://s2.coinmarketcap.com/static/img/coins/32x32/" + coin.Id + ".png")"> <a href="/Coin/@coin.Id" target="_blank">@coin.Name</a>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    }

@code {
    IEnumerable<DataModel> TrendingCoins { get; set; }
    bool loading = false;
    public Trending()
    {
        TrendingCoins = Enumerable.Empty<DataModel>();
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        TrendingCoins = await CoinMarketCapData.GetTrendingLatest();
        loading = false;
    }
}
