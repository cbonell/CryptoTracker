@page "/Coins"

<h3 class="text-center">Market Watch</h3>
@if(loading)
{
    <CryptoTracker.Web.Components.LoadingSpinner/>
}
else
{
<RadzenDataGrid Data="@CoinsData" TItem="CoinMarketCapIDMapModel" AllowPaging="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn TItem="CoinMarketCapIDMapModel" Property="Name" Title="Name" CssClass="text-center">
                <Template Context="coin">
                <a href="/Coin/@coin.Id" target="_blank">@coin.Name</a>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="CoinMarketCapIDMapModel" Property="Rank" Title="Rank" CssClass="text-center"/>
            <RadzenDataGridColumn TItem="CoinMarketCapIDMapModel" Property="Slug" Title="Slug" CssClass="text-center"/>
        </Columns>
    </RadzenDataGrid>
    }


@code {
    protected IEnumerable<CoinMarketCapIDMapModel> CoinsData { get; set; }
    bool loading = false;

    public Coins()
    {
        CoinsData = Enumerable.Empty<CoinMarketCapIDMapModel>();
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        CoinsData = await CoinMarketCapIDMapData.GetCoinMap();
        loading = false;
    }
}
