@page "/Coin/{Id:int}"
@using CryptoTracker.Web.Components
@using System.Security.Claims
@using CryptoTracker.DataAccess.Auth0
@inject AuthenticationStateProvider AuthState

<PageTitle>@data.Name - Details</PageTitle>

@if (loading)
{
    <LoadingSpinner />
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-8 border">
                <AuthorizeView>
                    <Authorized><button @onclick="AddToFavs">Add to favorites</button></Authorized>
                    <NotAuthorized>Login in to add to favorites</NotAuthorized>
                </AuthorizeView>
                
                <CoinDetails Coin="data" />
            </div>
            <div class="col-sm-4">
                <CoinPurchasePanel />
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    bool loading = false;
    CoinMarketCapMetaDataModel data { get; set; }

    public Coin()
    {
        data = new CoinMarketCapMetaDataModel();
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        data = await CoinMarketCapMetaData.GetCoinMetaData(Id);
        loading = false;
    }

    private async Task AddToFavs()
    {
        var state = await AuthState.GetAuthenticationStateAsync();
        if (state.User.Identity.IsAuthenticated)
        {
            // auth0|630eaeb6003454364c26e456
            string userId = state.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier).Value;
            
            await Auth0.AddUserFavoriteCoin(userId, Id);
        }
    }
}
