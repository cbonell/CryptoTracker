@using CryptoTracker.DataAccess.Auth0.Model
@using CryptoTracker.DataAccess.Auth0
@inject ICurrencyData currencyData
@inject IPriceAlertData priceAlertData
<Modal @ref="createModal" OnSave="CreateAlert" Title="@($"Create alert for {CoinGeckId}")">
    Alert Type
    <select @bind="inputAlertType">
        <option value="@((int)AlertType.Below)">Below</option>
        <option value="@((int)AlertType.Above)">Above</option>
    </select>

    Alert Price
    <input type="number" @bind="inputAlertPrice"/>
</Modal>
@code {
    [Parameter]
    public string UserId { get; set; }
    [Parameter]
    [EditorRequired]
    public string CoinGeckId { get; set; }
    Modal createModal;

    public CreateUserPriceAlert()
    {
        UserId = "";
        createModal = new();
    }

    int inputAlertType;
    double inputAlertPrice;

    public void Open()
    {
        createModal.ToggleDisplay();
    }

    private async Task CreateAlert()
    {

        UserMetaDataContainer user = await Auth0.GetUserMetaData(UserId);
        await priceAlertData.CreatePriceAlert(UserId, CoinGeckId, user.Email, (AlertType)inputAlertType, inputAlertPrice);
    }
}
