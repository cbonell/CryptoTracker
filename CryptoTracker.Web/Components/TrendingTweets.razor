<h3 class="text-center">Trending Tweets</h3>
<div class="col" id="tweet-container">
    @foreach (TweetSearchModel tweet in twitterSearchModels)
    {
        <div class="grow-sm">
            <div class="row">
                <div class="col-2">
                    <a href="@tweet.User.UserUrl" target="_blank">
                        <div class="row">
                            <div class="col">
                                <img src="@tweet.User.ImageUrl" />
                            </div>

                        </div>
                    </a>
                </div>
                <div class="col-1">
                    <span> <a href="@tweet.User.UserUrl" target="_blank">@tweet.User.Name </a></span>
                    <small>
                        @@<span>@tweet.User.ScreenName</span>
                    </small>
                </div>
                @*<div class="col-1">
            @tweet.CreatedAt
            </div>*@
            </div>
            <div class="row">
                <p class="text-center">@((MarkupString)tweet.DisplayText)</p>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-3">@tweet.RetweetCount Retweets</div>
                <div class="col-md-3">@tweet.FavoriteCount Quote Tweets</div>
            </div>
        </div>
    }
</div>
@code {
    [Parameter]
    public string CoinName { get; set; } = "";

    private IEnumerable<TweetSearchModel> twitterSearchModels { get; set; } = Enumerable.Empty<TweetSearchModel>();
    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(CoinName))
        {
            twitterSearchModels = await TwitterSearch.TrendingByHashTag(CoinName);
        }
    }
}
