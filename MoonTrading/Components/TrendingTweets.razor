@inject IMLModelData mlModeldata
@using MoonTrading.Tests.MLModelAccess

@namespace MoonTrading.Shared

<div class="container secondary-container scroll-y">
    <h3 class="">Trending #@CoinName Tweets</h3>

    @foreach (TweetSearchModel tweet in twitterSearchModels)
    {
        <div class="grow-sm tweet-container">
            @if (tweet.Sentiment == 0) {
                <div style="background-color:forestgreen"></div>
            } else if (tweet.Sentiment == 2) {
                        <div style="background-color:yellow"></div>
            } else {
                        <div style="background-color:darkred"></div>
            }
            <div class="row">
                <div class="col-2">
                    <a href="@tweet.User.UserUrl" target="_blank">
                        <div class="row">
                            <div class="col">
                                <img src="@tweet.User.ImageUrl" />
                            </div>

                        </div>
                    </a>
                </div>
                <div class="col-4">
                    <span> <a href="@tweet.User.UserUrl" target="_blank">@tweet.User.Name </a></span>
                    <small>
                        @@<span>@tweet.User.ScreenName</span>
                    </small>
                </div>
                @*<div class="col-1">
            @tweet.CreatedAt
            </div>*@
            </div>
            <div class="row">
                <p class="text-center">@((MarkupString)tweet.DisplayText)</p>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-3">@tweet.RetweetCount Retweets</div>
                <div class="col-md-3">@tweet.FavoriteCount Quote Tweets</div>
            </div>
        </div>
    }

    @if (twitterSearchModels != null && twitterSearchModels.Count() == 0)
    {
        <p>No twitter data found</p>
    }
</div>
@code {
    [Parameter]
    public string CoinName { get; set; } = "";

    private IEnumerable<TweetSearchModel> twitterSearchModels { get; set; } = Enumerable.Empty<TweetSearchModel>();
    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(CoinName))
        {
            twitterSearchModels = await TwitterSearch.GetTrendingByHashTag(CoinName);
            foreach (TweetSearchModel tweet in twitterSearchModels) {
                tweet.Sentiment = await mlModeldata.GetSentiment(tweet);
            }
        }
    }
}