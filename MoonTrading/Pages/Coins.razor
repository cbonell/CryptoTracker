@page "/Coins"
@page "/"
@using MoonTrading.Components
@using static MoonTrading.Extensions.Extensions
@inject ICoinGeckoData geckoData
<PageTitle>Market Watch</PageTitle>
<h3 class="text-center"> Cryptocurrency Prices by Market Cap </h3>
@if (loading)
{
    <LoadingSpinner />
}
else
{
    <RadzenDataGrid Data="@MarketCoins" TItem="CoinGeckoMarketModel" AllowPaging="true" AllowSorting="true" FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true">
        <Columns>
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Property="market_cap_rank" Title="#" CssClass="text-center" Filterable="false" />
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Property="Name" Title="Coin" CssClass="text-center">
                <Template Context="coin">
                    <img class="coin-img" src="@coin.image"> <a href="/Coin/@coin.Id">@coin.Name <small>(@coin.Symbol)</small></a>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Property="current_price" Title="Price" CssClass="text-center" />
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Property="high_24h" Title="24h High" CssClass="text-center" />
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Property="low_24h" Title="24h Low" CssClass="text-center" />
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Title="24h Change" CssClass="text-center">
                <Template Context="coin">
                    <span class="@(coin.price_change_percentage_24h == 0 ? "grey" : coin.price_change_percentage_24h > 0 ? "green" : "red")">@(coin.price_change_percentage_24h)%</span>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Title="Market Cap" CssClass="text-center">
                <Template Context="coin">
                    <span>$@(coin.market_cap.AsFormattedNumber())</span>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="CoinGeckoMarketModel" Title="Volume" CssClass="text-center">
                <Template Context="coin">
                    <span>$@(coin.total_volume.AsFormattedNumber())</span>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}


@code {
    protected IEnumerable<CoinGeckoMarketModel> MarketCoins { get; set; }
    bool loading = false;

    public Coins()
    {
        MarketCoins = Enumerable.Empty<CoinGeckoMarketModel>();
    }

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        MarketCoins = await geckoData.GetMarkets();
        loading = false;
    }
}
