@namespace MoonTrading.Shared
@using MoonTrading.Pages

@inject IPriceAlertData priceAlertData
@inherits BasePage

@if (IsAuthenticated)
{
    <h3 class="text-center">Price Alerts</h3>
    <RadzenDataGrid Data="@UserAlerts" TItem="PriceAlertModel" AllowPaging="true" AllowSorting="true" PageSize="15">
        <Columns>
            <RadzenDataGridColumn TItem="PriceAlertModel" Property="CoinGeckoId" Title="Currency Id" CssClass="text-center"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PriceAlertModel" Property="AlertPrice" Title="AlertPrice" CssClass="text-center"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="PriceAlertModel" CssClass="text-center">
                <Template Context="coin">
                    <button class="btn btn-danger" @onclick="(async () => await RemoveAlert(coin.Id))">Remove Alert</button>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {

    public IEnumerable<PriceAlertModel> UserAlerts { get; set; } = Enumerable.Empty<PriceAlertModel>();
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        if (!string.IsNullOrWhiteSpace(UserId))
        {
            UserAlerts = await priceAlertData.GetUserAlerts(UserId);
        }
    }

    private async Task RemoveAlert(int alertId)
    {
        await priceAlertData.DeletePriceAlert(alertId);
        await LoadData();

    }
}
